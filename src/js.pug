doctype html
html(lang='en')
    include _mixins
    +header("JavaScript - Web Languages")
    body
        +page
            +links
            h1.text-center JavaScript
            br
            p.
                JavaScript is a #[span.emphasis scripting language] used to make interactive web pages. It is
                inserted into a web page using
                the #[span.emphasis script element],
                either directly
                into the HTML file or loaded from a file or remote server.
            p.
                JavaScript interacts with the user by altering the Document Object Model.
                JavaScript receives input by attaching <span class="emphasis">event listeners</span> (functions) to elements e.g.
                listening to click events on a button.
            p.
                The following script removes a button when it is clicked:
            p.code.
                const button = document.getElementById("my-button");
                function eventListener(){
                    button.parentElement.removeChild(button);
                }
                button.addEventListener("click", eventListener);
            br
            button#my-button Hide
            script.
                const button = document.getElementById("my-button");
                function eventListener() {
                    button.parentElement.removeChild(button);
                }
                button.addEventListener("click", eventListener);
            p.
                The interactive elements on this website use JavaScript to toggle CSS properties and modify html elements.#[br]
                This site uses 5 scripts:
            ul
                li.
                    #[span.code htmlToggle.js] - Inserts reset element and
                    radio buttons into the second cell of each row of the table with the ID "html-table", unless
                    the cell has the "ignore" class.
                    Applies "hide" and "highlighted" CSS classes to the elements specified in the first cell on click.
                    Displays the "reset-button" element when at least one element is modified.
                    If &lt;body&gt; or &lt;html&gt; are hidden the script will reset after one second.
                li.
                    #[span.code themeToggle.js] - Inserts a checkbox that toggles the dark theme class on &lt;body&gt;. Styled by CSS.
                    Stores the current theme in localStorage. The initial value is decided by the OS theme if it is not set in localStorage.
                    Updates when the OS theme is changed. If the checkbox is focused by keyboard, a CSS class is added that
                    adds a border to the CSS-inserted image to show focus. On browsers that do not allow for checking
                    keyboard focus (the #[span.consolas :focus-visible] selector), any click on the button shows the border (#[span.consolas :focus]).
                li.
                    #[span.code CSSToggle.js] - Removes the CSS element from the page or adds it back when a function is called.
                    The CSS toggle button calls the function using the onclick property.
                li.
                    #[span.code addMDNLinks.js] - Links element names in the html page to the Mozilla
                    #[a(href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element") HTML elements reference].
                    The target is specified using the #[span.consolas mdn-link-target-container] class with the
                    #[span.consolas data-mdn-link-selector="tr td:first-child"] attribute.
                    The scripts cannot simply check every cell in the table for html element names,
                    because there is no way to check if a word exists in the HTML reference website.
                    Security restrictions on HTTP requests to foreign websites prevent JavaScript from checking
                    if the link returns a 404 error, so the first cell of each row selector is needed.
                li.
                    #[span.code showOriginal.js] - If the "View original version" popup exists,
                    inserts a minimize button, toggles the #[span.code .minimized] class,
                    stores the minimization state in localStorage and minimized the popup immediately on load
                    if it was minimized on the previous page. Replaces the "Load" link with a button that
                    inserts an iframe and displays the semi-transparent backdrop that hides the rest of the page.
                    If the user presses ESC inside or outside the iframe, or clicks outside the iframe,
                    it is removed and the backdrop is hidden. If iframe loses focus, it is refocused (necessary
                    for good keyboard accessibility). If somehow the button is clicked when an
                    iframe already exists, nothing happens.
                li.
                    #[span.code.dark-theme #[a(href='https://github.com/zloirock/core-js') core-js]] -
                    A polyfill library that implements many standard JavaScript features.
                    A #[span.emphasis polyfill] is JavaScript that implements JS features for browsers that do not support them.
                li.
                    #[span.code.dark-theme #[a(href='https://github.com/yola/classlist-polyfill') classlist-polyfill]] -
                    Polyfill for the classList property that is used to modify CSS classes.
                    Used to fix some browsers incorrectly implementing the class toggle function.
                    #[span.code element.classList.toggle("hide", false);] is supposed to remove the "hide" class,
                    if it exists, but on some browsers the second argument is ignored and the class is always toggled on/off.
                    This would cause every element to be hidden when the "Display" button is selected on load.
