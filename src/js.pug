doctype html
html(lang='en')
    include _mixins
    +header("JavaScript - Web Languages")
    body
        +page
            +links
            h1.text-center JavaScript
            br
            p.
                JavaScript is a #[span.emphasis scripting language] used to make interactive web pages. It is
                inserted into a web page using
                the #[span.emphasis script element],
                either directly
                into the HTML file or loaded from a file or remote server.
            p.
                JavaScript interacts with the user by altering the Document Object Model.
                JavaScript receives input by attaching <span class="emphasis">event listeners</span> (functions) to elements e.g.
                listening to click events on a button.
            p.
                The following script removes a button when it is clicked:
            p.code.
                const button = document.getElementById("my-button");
                function eventListener(){
                    button.parentElement.removeChild(button);
                }
                button.addEventListener("click", eventListener);
            br
            button#my-button Hide
            script.
                const button = document.getElementById("my-button");
                function eventListener() {
                    button.parentElement.removeChild(button);
                }
                button.addEventListener("click", eventListener);
            p.
                The interactive elements on this website use JavaScript to toggle CSS properties and modify html elements.#[br]
                This site uses 5 scripts:
            ul
                li.
                    #[span.code htmlToggle.js] - Inserts reset element and
                    radio buttons into the second cell of each row of the table #[span.code-value #html-table], unless
                    the cell has the #[span.code-value .ignore] class.
                    Applies #[span.code-value .hide, .highlighted] CSS classes to the elements specified in the first cell on click.
                    Displays #[span.code-value #reset-button] element when at least one element is modified.
                    If #[span.code-value &lt;body&gt;] or #[span.code-value &lt;html&gt;]    are hidden the script will reset after one second.
                li.
                    #[span.code themeToggle.js] - Inserts a checkbox that toggles the dark theme class on #[span.code-value &lt;body&gt;]. Styled by CSS.
                    Stores the current theme in localStorage. The initial value is decided by the OS theme if it is not set in localStorage.
                    Updates when the OS theme is changed. If the checkbox is focused by keyboard, a CSS class is added that
                    adds a border to the CSS-inserted image to show focus. On browsers that do not allow for checking
                    keyboard focus (the #[span.code-value :focus-visible] selector), any click on the button shows the border (#[span.code-value :focus]).
                    The localStorage theme value expires after an hour passes without the website open. I would have used sessionStorage
                    to discard the value after the user closes the browser, but sessionStorage creates a new session when a tab is opened,
                    instead of keeping one session for the entire browser, so I faked the 'delete on session end' functionality
                    with a time limit for the entire browser.
                    When the moon images are first inserted, the script checks if clicking an image clicks
                    the checkbox. If it does not, it adds an event listener that clicks the checkbox instead.
                    This fixes an Internet Explorer bug where clicking images inside label elements does not click
                    the label's associated form element.
                li.
                    #[span.code CSSToggle.js] - Adds an event listener to the #[span.code-value #CSSToggle] element
                    to add/remove the CSS element on click.
                li.
                    #[span.code addMDNLinks.js] - Links element names in the html page to the Mozilla
                    #[a(href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element") HTML elements reference].
                    The target is specified using the #[span.code-value mdn-link-target-container] class with the
                    #[span.code-value data-mdn-link-selector="tr td:first-child"] attribute.
                    The scripts cannot simply check every cell in the table for html element names,
                    because there is no way to check if a word exists in the HTML reference website.
                    Security restrictions on HTTP requests to foreign websites prevent JavaScript from checking
                    if the link returns a 404 error, so the first cell of each row selector is needed.
                li.
                    #[span.code showOriginal.js] - If the "View original version" popup exists,
                    inserts a minimize button, toggles the #[span.code-value .minimized] class,
                    stores the minimization state in localStorage and minimized the popup immediately on load
                    if it was minimized on the previous page. Replaces the "Load" link with a button that
                    inserts an iframe and displays the semi-transparent backdrop that hides the rest of the page.
                    If the user presses ESC inside or outside the iframe, or clicks outside the iframe,
                    it is removed and the backdrop is hidden. If iframe loses focus, it is refocused (necessary
                    for good keyboard accessibility). If somehow the button is clicked when an
                    iframe already exists, nothing happens.
                li.
                    #[span.code.dark-theme #[a(href='https://github.com/zloirock/core-js') core-js]] -
                    A polyfill library that implements many standard JavaScript features.
                    A #[span.emphasis polyfill] is JavaScript that implements JS features for browsers that do not support them.
                    Not directly imported from a script tag. Necessary parts of core-js are detected at build time
                    and merged into the other scripts. Common code is stored in "shared.js" to avoid duplicated code.
                li.
                    #[span.code.dark-theme #[a(href='https://github.com/WebReflection/dom4') dom4]] -
                    Polyfill library similar to core-js that implements Document Object Model functions and properties.
                    Fixes implementation errors and missing DOM functions in older browsers.
                    This file is #[a(href="https://cdnjs.cloudflare.com/ajax/libs/dom4/2.1.6/dom4.max.min.js") directly imported]
                    from a public CDN (Content Distribution Network) service instead of being stored with the other scripts (this is a
                    common way of importing libraries).
